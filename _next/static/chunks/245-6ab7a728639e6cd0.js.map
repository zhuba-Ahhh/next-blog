{"version":3,"file":"static/chunks/245-6ab7a728639e6cd0.js","mappings":"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","sources":["webpack://_N_E/./node_modules/.pnpm/next@14.2.6_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/api/navigation.js","webpack://_N_E/../../src/client/add-locale.ts","webpack://_N_E/../../src/client/get-domain-locale.ts","webpack://_N_E/../../src/client/link.tsx","webpack://_N_E/../../src/client/request-idle-callback.ts","webpack://_N_E/../../src/client/resolve-href.ts","webpack://_N_E/../../src/client/use-intersection.tsx","webpack://_N_E/../../../src/shared/lib/escape-regexp.ts","webpack://_N_E/../../../src/shared/lib/router-context.shared-runtime.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/format-url.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/index.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/interpolate-as.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/is-dynamic.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/is-local-url.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/omit.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/querystring.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/route-matcher.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/route-regex.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/sorted-routes.ts","webpack://_N_E/../../../src/shared/lib/utils.ts","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/back.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/store.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/array.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/use-will-change/WillChangeMotionValue.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/use-will-change/get-will-change-name.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://_N_E/./node_modules/.pnpm/next@14.2.6_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/api/link.js","webpack://_N_E/./node_modules/.pnpm/next-view-transitions@0.3.0_next@14.2.6_react-dom@18.3.1_react@18.3.1/node_modules/next-view-transitions/dist/index.js"],"sourcesContent":["export * from \"../client/components/navigation\";\n\n//# sourceMappingURL=navigation.js.map",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return options.type === \"spring\" || !isWaapiSupportedEasing(options.ease);\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff, \n/**\n * Currently used to remove values from will-change when an animation ends.\n * Preferably this would be handled by event listeners on the MotionValue\n * but these aren't consistent enough yet when considering the different ways\n * an animation can be cancelled.\n */\nonEnd) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n            onEnd && onEnd();\n        },\n        onStop: onEnd,\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.getProps()[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff, addValueToWillChange(visualElement, key)));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.3.30\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.3.30 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            this.isRenderScheduled = false;\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.isRenderScheduled = false;\n        this.scheduleRender = () => {\n            if (!this.isRenderScheduled) {\n                this.isRenderScheduled = true;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.applyWillChange = true;\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nlet scheduleHandoffComplete = false;\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete &&\n        ((_a = window.MotionHasOptimisedAnimation) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        wantsHandoff.current = false;\n        // This ensures all future calls to animateChanges() will run in useEffect\n        if (!scheduleHandoffComplete) {\n            scheduleHandoffComplete = true;\n            queueMicrotask(completeHandoff);\n        }\n    });\n    return visualElement;\n}\nfunction completeHandoff() {\n    window.MotionHandoffIsComplete = true;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { getWillChangeName } from '../../value/use-will-change/get-will-change-name.mjs';\nimport { addUniqueItem } from '../../utils/array.mjs';\n\nfunction makeState({ applyWillChange = false, scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext, isStatic) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, isStatic ? false : applyWillChange, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext, isStatic);\n    return isStatic ? make() : useConstant(make);\n};\nfunction addWillChange(willChange, name) {\n    const memberName = getWillChangeName(name);\n    if (memberName) {\n        addUniqueItem(willChange, memberName);\n    }\n}\nfunction forEachDefinition(props, definition, callback) {\n    const list = Array.isArray(definition) ? definition : [definition];\n    for (let i = 0; i < list.length; i++) {\n        const resolved = resolveVariantFromProps(props, list[i]);\n        if (resolved) {\n            const { transitionEnd, transition, ...target } = resolved;\n            callback(target, transitionEnd);\n        }\n    }\n}\nfunction makeLatestValues(props, context, presenceContext, shouldApplyWillChange, scrapeMotionValues) {\n    var _a;\n    const values = {};\n    const willChange = [];\n    const applyWillChange = shouldApplyWillChange && ((_a = props.style) === null || _a === void 0 ? void 0 : _a.willChange) === undefined;\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        forEachDefinition(props, variantToSet, (target, transitionEnd) => {\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd) {\n                values[key] = transitionEnd[key];\n            }\n        });\n    }\n    // Add animating values to will-change\n    if (applyWillChange) {\n        if (animate && initial !== false && !isAnimationControls(animate)) {\n            forEachDefinition(props, animate, (target) => {\n                for (const key in target) {\n                    addWillChange(willChange, key);\n                }\n            });\n        }\n        if (willChange.length) {\n            values.willChange = willChange.join(\",\");\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        applyWillChange: true,\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n            this.removeWillChange = addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        var _a;\n        (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false, addValueToWillChange(this.visualElement, axis)));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedTransformAnimation(appearId)) {\n        window.MotionCancelOptimisedTransform(appearId);\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedTransform &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    /**\n     * If the willChange style has been manually set as a string, set\n     * applyWillChange to false to prevent it from automatically being applied.\n     */\n    if (visualElement && style && typeof style.willChange === \"string\") {\n        visualElement.applyWillChange = false;\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.3.30\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, isNullish, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\nfunction isNullish(v) {\n    return v == null;\n}\n\nexport { colorRegex, floatRegex, isNullish, isString, sanitize, singleColorRegex };\n","import { MotionValue } from '../index.mjs';\nimport { getWillChangeName } from './get-will-change-name.mjs';\nimport { removeItem } from '../../utils/array.mjs';\n\nclass WillChangeMotionValue extends MotionValue {\n    constructor() {\n        super(...arguments);\n        this.output = [];\n        this.counts = new Map();\n    }\n    add(name) {\n        const styleName = getWillChangeName(name);\n        if (!styleName)\n            return;\n        /**\n         * Update counter. Each value has an indepdent counter\n         * as multiple sources could be requesting the same value\n         * gets added to will-change.\n         */\n        const prevCount = this.counts.get(styleName) || 0;\n        this.counts.set(styleName, prevCount + 1);\n        if (prevCount === 0) {\n            this.output.push(styleName);\n            this.update();\n        }\n        /**\n         * Prevents the remove function from being called multiple times.\n         */\n        let hasRemoved = false;\n        return () => {\n            if (hasRemoved)\n                return;\n            hasRemoved = true;\n            const newCount = this.counts.get(styleName) - 1;\n            this.counts.set(styleName, newCount);\n            if (newCount === 0) {\n                removeItem(this.output, styleName);\n                this.update();\n            }\n        };\n    }\n    update() {\n        this.set(this.output.length ? this.output.join(\", \") : \"auto\");\n    }\n}\n\nexport { WillChangeMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { WillChangeMotionValue } from './WillChangeMotionValue.mjs';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    var _a;\n    if (!visualElement.applyWillChange)\n        return;\n    let willChange = visualElement.getValue(\"willChange\");\n    /**\n     * If we haven't created a willChange MotionValue, and the we haven't been\n     * manually provided one, create one.\n     */\n    if (!willChange && !((_a = visualElement.props.style) === null || _a === void 0 ? void 0 : _a.willChange)) {\n        willChange = new WillChangeMotionValue(\"auto\");\n        visualElement.addValue(\"willChange\", willChange);\n    }\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { acceleratedValues } from '../../animation/animators/utils/accelerated-values.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction getWillChangeName(name) {\n    if (transformProps.has(name)) {\n        return \"transform\";\n    }\n    else if (acceleratedValues.has(name)) {\n        return camelToDash(name);\n    }\n}\n\nexport { getWillChangeName };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","export { default } from \"../client/link\";\nexport * from \"../client/link\";\n\n//# sourceMappingURL=link.js.map","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport NextLink from 'next/link';\nimport { usePathname, useRouter } from 'next/navigation';\nimport { useRef, useState, useEffect, use, createContext, useCallback, startTransition, useMemo } from 'react';\n\n// TODO: This implementation might not be complete when there are nested\n// Suspense boundaries during a route transition. But it should work fine for\n// the most common use cases.\nfunction useBrowserNativeTransitions() {\n    const pathname = usePathname();\n    const currentPathname = useRef(pathname);\n    // This is a global state to keep track of the view transition state.\n    const [currentViewTransition, setCurrentViewTransition] = useState(null);\n    useEffect(()=>{\n        if (!('startViewTransition' in document)) {\n            return ()=>{};\n        }\n        const onPopState = ()=>{\n            let pendingViewTransitionResolve;\n            const pendingViewTransition = new Promise((resolve)=>{\n                pendingViewTransitionResolve = resolve;\n            });\n            const pendingStartViewTransition = new Promise((resolve)=>{\n                // @ts-ignore\n                document.startViewTransition(()=>{\n                    resolve();\n                    return pendingViewTransition;\n                });\n            });\n            setCurrentViewTransition([\n                pendingStartViewTransition,\n                pendingViewTransitionResolve\n            ]);\n        };\n        window.addEventListener('popstate', onPopState);\n        return ()=>{\n            window.removeEventListener('popstate', onPopState);\n        };\n    }, []);\n    if (currentViewTransition && currentPathname.current !== pathname) {\n        // Whenever the pathname changes, we block the rendering of the new route\n        // until the view transition is started (i.e. DOM screenshotted).\n        use(currentViewTransition[0]);\n    }\n    // Keep the transition reference up-to-date.\n    const transitionRef = useRef(currentViewTransition);\n    useEffect(()=>{\n        transitionRef.current = currentViewTransition;\n    }, [\n        currentViewTransition\n    ]);\n    useEffect(()=>{\n        // When the new route component is actually mounted, we finish the view\n        // transition.\n        currentPathname.current = pathname;\n        if (transitionRef.current) {\n            transitionRef.current[1]();\n            transitionRef.current = null;\n        }\n    }, [\n        pathname\n    ]);\n}\n\nconst ViewTransitionsContext = /*#__PURE__*/ createContext(()=>()=>{});\nfunction ViewTransitions({ children }) {\n    const [finishViewTransition, setFinishViewTransition] = useState(null);\n    useEffect(()=>{\n        if (finishViewTransition) {\n            finishViewTransition();\n            setFinishViewTransition(null);\n        }\n    }, [\n        finishViewTransition\n    ]);\n    useBrowserNativeTransitions();\n    return /*#__PURE__*/ jsx(ViewTransitionsContext.Provider, {\n        value: setFinishViewTransition,\n        children: children\n    });\n}\nfunction useSetFinishViewTransition() {\n    return use(ViewTransitionsContext);\n}\n\nfunction _extends$1() {\n    _extends$1 = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends$1.apply(this, arguments);\n}\nfunction _object_without_properties_loose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nfunction useTransitionRouter() {\n    const router = useRouter();\n    const finishViewTransition = useSetFinishViewTransition();\n    const triggerTransition = useCallback((cb, { onTransitionReady } = {})=>{\n        // @ts-ignore\n        const transition = document.startViewTransition(()=>new Promise((resolve)=>{\n                startTransition(()=>{\n                    cb();\n                    finishViewTransition(()=>resolve);\n                });\n            }));\n        if (onTransitionReady) {\n            transition.ready.then(onTransitionReady);\n        }\n    }, []);\n    const push = useCallback((href, _param = {})=>{\n        var { onTransitionReady } = _param, options = _object_without_properties_loose(_param, [\n            \"onTransitionReady\"\n        ]);\n        triggerTransition(()=>router.push(href, options), {\n            onTransitionReady\n        });\n    }, [\n        triggerTransition,\n        router\n    ]);\n    const replace = useCallback((href, _param = {})=>{\n        var { onTransitionReady } = _param, options = _object_without_properties_loose(_param, [\n            \"onTransitionReady\"\n        ]);\n        triggerTransition(()=>router.replace(href, options), {\n            onTransitionReady\n        });\n    }, [\n        triggerTransition,\n        router\n    ]);\n    return useMemo(()=>_extends$1({}, router, {\n            push,\n            replace\n        }), [\n        push,\n        replace,\n        router\n    ]);\n}\n\nfunction _extends() {\n    _extends = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\n// copied from https://github.com/vercel/next.js/blob/66f8ffaa7a834f6591a12517618dce1fd69784f6/packages/next/src/client/link.tsx#L180-L191\nfunction isModifiedEvent(event) {\n    const eventTarget = event.currentTarget;\n    const target = eventTarget.getAttribute('target');\n    return target && target !== '_self' || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || // triggers resource download\n    event.nativeEvent && event.nativeEvent.which === 2;\n}\n// copied from https://github.com/vercel/next.js/blob/66f8ffaa7a834f6591a12517618dce1fd69784f6/packages/next/src/client/link.tsx#L204-L217\nfunction shouldPreserveDefault(e) {\n    const { nodeName } = e.currentTarget;\n    // anchors inside an svg have a lowercase nodeName\n    const isAnchorNodeName = nodeName.toUpperCase() === 'A';\n    if (isAnchorNodeName && isModifiedEvent(e)) {\n        // ignore click for browser’s default behavior\n        return true;\n    }\n    return false;\n}\n// This is a wrapper around next/link that explicitly uses the router APIs\n// to navigate, and trigger a view transition.\nfunction Link(props) {\n    const router = useTransitionRouter();\n    const { href, as, replace, scroll } = props;\n    const onClick = useCallback((e)=>{\n        if (props.onClick) {\n            props.onClick(e);\n        }\n        if ('startViewTransition' in document) {\n            if (shouldPreserveDefault(e)) {\n                return;\n            }\n            e.preventDefault();\n            const navigate = replace ? router.replace : router.push;\n            navigate(as || href, {\n                scroll: scroll != null ? scroll : true\n            });\n        }\n    }, [\n        props.onClick,\n        href,\n        as,\n        replace,\n        scroll\n    ]);\n    return /*#__PURE__*/ jsx(NextLink, _extends({}, props, {\n        onClick: onClick\n    }));\n}\n\nexport { Link, ViewTransitions, useTransitionRouter };\n"],"names":["addLocale","path","args","getDomainLocale","locale","locales","domainLocales","_interop_require_default","_","require","prefetched","Set","router","prefetch","window","href","as","options","appOptions","isAppRouter","_islocalurl","isLocalURL","prefetchedKey","has","add","process","env","formatStringOrUrl","urlObjOrString","_formaturl","formatUrl","children","legacyBehavior","childrenProp","a","appRouter","React","useContext","AppRouterContext","pagesRouter","prefetchEnabled","prefetchProp","_routerreducertypes","PrefetchKind","AUTO","FULL","default","useMemo","resolvedHref","hrefProp","asProp","resolvedAs","_resolvehref","resolveHref","previousAs","useRef","_react","child","Children","only","childRef","setIntersectionRef","isVisible","resetVisible","useIntersection","rootMargin","_useintersection","setRef","useCallback","previousHref","current","el","useEffect","appPrefetchKind","ref","onClick","e","props","defaultPrevented","linkClicked","currentTarget","replace","shallow","scroll","nodeName","isModifiedEvent","event","target","eventTarget","nativeEvent","which","metaKey","ctrlKey","shiftKey","altKey","preventDefault","navigate","routerScroll","startTransition","onMouseEnter","onMouseEnterProp","priority","bypassPrefetchedCheck","onTouchStart","onTouchStartProp","childProps","curLocale","type","localeDomain","addBasePath","_getdomainlocale","defaultLocale","_addbasepath","_addlocale","restProps","cloneElement","_jsxruntime","jsx","cancelIdleCallback","requestIdleCallback","self","bind","cb","start","Date","now","setTimeout","didTimeout","timeRemaining","Math","max","id","clearTimeout","resolveAs","base","urlAsString","formatWithValidation","urlProtoMatch","match","urlAsStringNoProto","slice","length","urlParts","split","console","error","pathname","normalizedUrl","normalizeRepeatedSlashes","URL","startsWith","asPath","finalUrl","normalizePathTrailingSlash","interpolatedAs","isDynamicRoute","searchParams","query","searchParamsToUrlQuery","result","params","interpolateAs","hash","omit","origin","hasIntersectionObserver","IntersectionObserver","observers","Map","idList","param","rootRef","disabled","isDisabled","visible","setVisible","useState","elementRef","setElement","element","tagName","observe","callback","observer","elements","createObserver","instance","root","margin","existing","find","obj","get","entries","forEach","entry","isIntersecting","intersectionRatio","push","set","delete","unobserve","size","disconnect","index","findIndex","splice","idleCallback","escapeStringRegexp","reHasRegExp","reReplaceRegExp","str","test","RouterContext","createContext","urlObjectKeys","slashedProtocols","urlObj","auth","hostname","protocol","host","encodeURIComponent","indexOf","port","String","querystring","urlQueryToSearchParams","search","endsWith","slashes","url","getSortedRoutes","route","asPathname","interpolatedRoute","dynamicRegex","getRouteRegex","dynamicGroups","groups","dynamicMatches","getRouteMatcher","Object","keys","every","value","repeat","optional","replaced","Array","isArray","map","segment","join","TEST_ROUTE","isInterceptionRouteAppPath","extractInterceptionRouteInformation","interceptedRoute","isAbsoluteUrl","locationOrigin","getLocationOrigin","resolved","hasBasePath","object","omitted","includes","key","stringifyUrlQueryParam","isNaN","urlQuery","URLSearchParams","append","item","assign","_len","arguments","searchParamsList","_key","from","re","routeMatch","exec","decode","decodeURIComponent","DecodeError","g","slugName","m","pos","undefined","getNamedMiddlewareRegex","getNamedRouteRegex","parseParameter","getParametrizedRoute","segments","removeTrailingSlash","groupIndex","parameterizedRoute","markerMatch","INTERCEPTION_ROUTE_MARKERS","paramMatches","normalizedRoute","getSafeKeyFromSegment","interceptionMarker","getSafeRouteKey","routeKeys","keyPrefix","cleanedKey","invalidKey","parseInt","interceptionPrefix","getNamedParametrizedRoute","prefixRouteKeys","i","routeKey","j","fromCharCode","floor","namedParameterizedRoute","hasInterceptionMarker","some","usedMarker","prefixRouteKey","namedRegex","catchAll","UrlNode","insert","urlPath","_insert","filter","Boolean","smoosh","_smoosh","prefix","childrenPaths","sort","restSlugName","optionalRestSlugName","routes","c","reduce","prev","curr","placeholder","r","unshift","urlPaths","slugNames","isCatchAll","nextSegment","segmentName","isOptional","substring","handleSlug","previousSlug","nextSlug","slug","normalizedPages","pagePath","MiddlewareNotFoundError","MissingStaticPage","NormalizeError","PageNotFoundError","SP","ST","WEB_VITALS","execOnce","getDisplayName","getURL","isResSent","loadGetInitialProps","stringifyError","fn","used","ABSOLUTE_URL_REGEX","location","Component","displayName","name","res","finished","headersSent","urlNoQuery","App","ctx","getInitialProps","pageProps","performance","method","Error","constructor","page","code","message","JSON","stringify","stack","acceleratedValues","underDampedSpring","stiffness","damping","restSpeed","criticallyDampedSpring","sqrt","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","transform","G","instantAnimationState","isNotNull","getFinalKeyframe","repeatType","finalKeyframe","resolvedKeyframes","memo","isAnimatable","complex","P","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","sync_time","X","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","KeyframesResolver","onKeyframesResolved","velocity","onComplete","onUpdate","isGenerator","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","errors","K","hasKeyframesChanged","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","calcGeneratorVelocity","resolveValue","t","prevT","velocity_per_second","R","calcAngularFreq","undampedFreq","dampingRatio","durationKeys","physicsKeys","isSpringType","spring","restDelta","resolveSpring","state","done","mass","isResolvedFromDuration","getSpringOptions","springOptions","derived","findSpring","bounce","envelope","derivative","time_conversion","w","clamp","u","exponentialDecay","delta","safeMin","exp","pow","d","approximateRoot","initialGuess","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","angularFreq","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","calculatedDuration","next","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","timeReachedBoundary","spring$1","isOutOfBounds","v","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","noop","Z","getTForX","binarySubdivide","x","lowerBound","upperBound","currentX","currentT","aX","easeIn","easeOut","easeInOut","isEasingArray","backOut","backIn","reverse","M","backInOut","mirror","o","easingLookup","linear","circIn","circ","Z7","circInOut","X7","circOut","Bn","anticipate","p","easingDefinitionToFunction","definition","k","x1","y1","x2","y2","hueToRgb","q","mixImmediate","b","mixLinearColor","to","fromExpo","expo","colorTypes","hex","$","rgba","hsla","J","getColorType","asRGBA","color","model","parse","hslaToRgba","hue","saturation","lightness","alpha","red","green","blue","round","mixColor","fromRGBA","toRGBA","blended","number","invisibleValues","mixNumber","getMixer","is_css_variable","mixComplex","mixArray","mixObject","output","numValues","blendValue","template","createTransformer","originStats","V","targetStats","indexes","var","values","pipe","z","matchOrder","_a","orderedOrigin","pointers","types","originIndex","originValue","mix","mixer","keyframeValues","times","easingFunctions","mapTimeToKeyframe","interpolate","input","isClamp","inputLength","mixers","createMixers","customMixer","mixerFactory","numMixers","easingFunction","interpolator","progressInRange","progress","Y","offset","defaultOffset","arr","fillOffset","remaining","offsetProgress","easing","frameloopDriver","passTimestamp","timestamp","update","frameloop_frame","Wi","stop","Pn","frameData","isProcessing","generators","decay","tween","percentToProgress","percent","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","resolver","cancel","teardown","onStop","motionValue","KeyframeResolver$1","KeyframeResolver","scheduleResolve","keyframes$1","mapPercentToKeyframes","mirroredGenerator","generatorFactory","generator","calcGeneratorDuration","Infinity","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","iterationProgress","isAnimationFinished","finish","time","newTime","driver","newSpeed","hasChanged","isScheduled","resume","onPlay","complete","stopDriver","isBezierDefinition","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","hasOwnProperty","call","Element","prototype","AcceleratedAnimation","DOMKeyframesResolver","s","owner","isWaapiSupportedEasing","pregeneratedAnimation","pregenerateKeyframes","sampleAnimation","pregeneratedKeyframes","animation","animateStyle","valueName","keyframeOptions","animate","fill","iterations","direction","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","accelerated_values","HTMLElement","getProps","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","cancelAll","observeTimeline","prevProgress","onFrame","percentage","cancelTimeline","methodName","controls","animateMotionValue","transition","isHandoff","onEnd","valueTransition","transitions","getVelocity","shouldSkip","GlobalConfig","skipAnimations","optimizedAppearDataAttribute","_render_dom_utils_camel_to_dash_mjs__WEBPACK_IMPORTED_MODULE_0__","D","getOptimisedAppearId","visualElement","_data_id_mjs__WEBPACK_IMPORTED_MODULE_0__","isAnimationControls","isKeyframesTarget","isTransitionDefined","when","_delay","delayChildren","staggerChildren","staggerDirection","getValueTransition","LayoutGroupContext","react__WEBPACK_IMPORTED_MODULE_0__","LazyContext","strict","MotionConfigContext","transformPagePoint","isStatic","reducedMotion","PresenceContext","acos","_modifiers_reverse_mjs__WEBPACK_IMPORTED_MODULE_0__","_modifiers_mirror_mjs__WEBPACK_IMPORTED_MODULE_1__","mirrorEasing","reverseEasing","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","addPointerEvent","_add_dom_event_mjs__WEBPACK_IMPORTED_MODULE_0__","E","_event_info_mjs__WEBPACK_IMPORTED_MODULE_1__","extractEventInfo","pointType","point","y","addPointerInfo","_utils_is_primary_pointer_mjs__WEBPACK_IMPORTED_MODULE_0__","isPrimaryPointer","pointerType","button","isPrimary","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","flagRunNextFrame","steps","acc","createRenderStep","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","step","schedule","keepAlive","immediate","queue","addToCurrentFrame","clear","read","resolveKeyframes","preRender","render","postRender","processBatch","useManualTiming","wake","frame","cancelFrame","_batcher_mjs__WEBPACK_IMPORTED_MODULE_0__","requestAnimationFrame","_utils_noop_mjs__WEBPACK_IMPORTED_MODULE_1__","clearTime","_frame_mjs__WEBPACK_IMPORTED_MODULE_0__","_utils_GlobalConfig_mjs__WEBPACK_IMPORTED_MODULE_1__","queueMicrotask","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","shallowCompare","prevLength","resolveVariant","custom","resolve_variants","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","getValue","latestValues","valueTarget","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","MotionHandoffAnimation","appearId","get_appear_id","motion_value","shouldReduceMotion","add_will_change","setTarget","resolve_value","hasValue","addValue","es_value","BX","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","animateChildren","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","notify","first","last","sortNodePosition","reversePriorityOrder","variant_props","numAnimationTypes","createTypeState","isActive","prevResolvedValues","createState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","AnimationFeature","L","createAnimationState","animateVisualElement","resolvedDefinition","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","context","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","prop","propIsVariant","is_variant_label","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","is_animation_controls","H","shouldAnimateType","variantDidChange","handledRemovedValues","definitionList","resolvedValues","allKeys","markToAnimate","liveStyle","is_keyframes_target","C","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","initial","setActive","setAnimateFunction","makeAnimator","reset","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","featureProps","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","addHoverEvent","callbackName","add_pointer_event","info","gD","HoverGesture","FocusGesture","onFocus","isFocusVisible","matches","onBlur","add_dom_event","isNodeOrChild","parent","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","event_info","Q","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","onTapStart","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","fireObserverCallback","fireAllObserverCallbacks","thresholdNames","InViewFeature","hasEnteredView","isInView","startObserver","viewport","amount","once","threshold","observeIntersection","rootInteresectionObserver","initIntersectionObserver","lookupRoot","document","rootObservers","onViewportEnter","onViewportLeave","hasViewportOptionChanged","prevViewport","gestureAnimations","loadFeatures","features","_definitions_mjs__WEBPACK_IMPORTED_MODULE_0__","isForcedMotionValue","layoutId","_render_html_utils_transform_mjs__WEBPACK_IMPORTED_MODULE_0__","_projection_styles_scale_correction_mjs__WEBPACK_IMPORTED_MODULE_1__","convertBoundingBoxToBox","top","left","right","bottom","convertBoxToBoundingBox","transformBoxPoints","transformPoint","topLeft","bottomRight","scalePoint","scale","originPoint","applyPointDelta","translate","boxScale","applyAxisDelta","axis","applyBoxDelta","box","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","projectionDelta","style","display","layoutScroll","transformBox","_utils_has_transform_mjs__WEBPACK_IMPORTED_MODULE_0__","ud","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","_utils_mix_number_mjs__WEBPACK_IMPORTED_MODULE_1__","scaleX","originX","scaleY","originY","createAxisDelta","createDelta","createAxis","createBox","scaleCorrectors","addScaleCorrector","correctors","isIdentityScale","hasScale","hasTransform","has2DTranslate","rotate","rotateX","rotateY","skewX","skewY","is2DTranslate","measureViewportBox","_geometry_conversion_mjs__WEBPACK_IMPORTED_MODULE_0__","i8","d7","getBoundingClientRect","measurePageBox","rootProjectionNode","viewportBox","_geometry_delta_apply_mjs__WEBPACK_IMPORTED_MODULE_1__","am","splitCSSVariableRegex","invalidTemplates","unresolvedKeyframes","readKeyframes","keyframe","trim","getVariableValue","depth","token","fallback","parseCSSVariable","token1","token2","getComputedStyle","getPropertyValue","trimmed","is_numerical_string","parseFloat","resolveNoneKeyframes","unit_conversion","z2","originType","dimensions","targetType","mP","needsMeasurement","noneKeyframeIndexes","is_zero_value_string","W","makeNoneKeyframesAnimatable","animatableTemplate","noneIndex","animatable_none","T","measureInitialState","suspendedScrollY","pageYOffset","measuredOrigin","lw","measureKeyframe","jump","measureEndState","finalKeyframeIndex","removedTransforms","unsetTransformName","unsetTransformValue","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","findValueType","l","propEventHandlers","numVariantProps","VisualElement","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","reducedMotionConfig","visualState","applyWillChange","isVariantNode","isControllingVariants","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","isRenderScheduled","triggerBuild","renderInstance","renderState","projection","scheduleRender","baseTarget","initialValues","is_controlling_variants","willChange","initialMotionValues","is_motion_value","removeFromVariantTree","addVariantChild","bindToMotionValue","initPrefersReducedMotion","is_browser","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","remove","feature","valueIsTransform","removeOnChange","on","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","updateFeatures","definitions","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","models","dO","getStaticValue","setStaticValue","transformTemplate","listener","updateMotionValuesFromProps","nextValue","prevValue","existingValue","hasAnimated","removeValue","handleChildMotionValue","getVariant","variants","getTransformPagePoint","getClosestVariantNode","startAtParent","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","subscription_manager","DOMVisualElement","compareDocumentPosition","vars","HTMLVisualElement","N","defaultType","defaults","A","computedStyle","f","measure","build_styles","scrape_motion_values","U","childSubscription","textContent","SVGVisualElement","isSVGTag","camel_to_dash","getAttribute","utils_scrape_motion_values","build_attrs","styleProp","utils_render","is_svg_tag","createDomVisualElement","is_svg_component","allowProjection","react","Fragment","isValidProp","MotionContext","microtask","cancelMicrotask","batcher","isRefObject","SwitchLayoutGroupContext","scheduleHandoffComplete","completeHandoff","MotionHandoffIsComplete","variantLabelsAsDependency","motionComponentSymbol","Symbol","for","createHtmlRenderState","transformOrigin","copyRawValuesOnly","source","is_forced_motion_value","validMotionProps","isValidMotionProp","shouldForward","createSvgRenderState","attrs","resolveMotionValue","unwrappedValue","toValue","makeUseVisualState","context_PresenceContext","O","make","makeState","createRenderState","onMount","makeLatestValues","shouldApplyWillChange","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","inherit","isInitialAnimationBlocked","variantToSet","forEachDefinition","addWillChange","memberName","get_will_change_name","array","y4","config","use_constant","h","list","svgMotionConfig","useVisualState","getBBox","width","height","htmlMotionConfig","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","distance2D","xDelta","yDelta","onStart","onMove","handlePointerMove","handlePointerUp","end","onSessionEnd","resumeAnimation","panInfo","is_primary_pointer","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","fJ","resolveConstraints","isAnimationBlocked","getAxisMotionValue","units","aQ","measuredAxis","layoutBox","removeWillChange","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","lockThreshold","updateAxis","getAnimationState","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","rebaseAxisConstraints","relativeConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","measuredConstraints","userConstraints","conversion","dragMomentum","dragTransition","onDragTransitionEnd","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","calcOrigin","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","DragGesture","removeGroupControls","dragControls","asyncHandler","PanGesture","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","px","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","scale_correction","B","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","MeasureLayout","usePresence","useId","jsx_runtime","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","shadow","xScale","yScale","averageScale","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","delta_apply","q2","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","relativeProgress","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","cl","prevLead","lead","indexOfNode","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","isDirty","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","create_projection_node_createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","hasCheckedOptimisedAppear","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","animationProgress","sharedNodes","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","MotionCancelOptimisedTransform","cancelTreeOptimisedTransformAnimations","projectionNode","MotionHasOptimisedTransformAnimation","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","S6","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","has_transform","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","D2","boxWithoutTransform","Lj","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","o2","D_","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","YY","prevProjectionDelta","createProjectionDeltas","notifyAll","wc","projectionDeltaWithTransform","prevRelativeTarget","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","snapshotSource","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","mixAxis","mixValues","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","animateSingleValue","motionValue$1","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","rotateZ","resetValues","getProjectionStyles","_b","styles","pointerEvents","emptyStyles","valuesToRender","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","navigator","userAgent","toLowerCase","string","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","preloadedFeatures","gestures","ProjectionNode","motion","createMotionProxy","createConfig","customMotionComponentConfig","motion_createMotionComponent","createVisualElement","useRender","load_features","ForwardRefComponent","forwardRef","externalRef","configAndProps","useLayoutId","layoutGroupId","useCreateMotionContext","getCurrentTreeVariants","layoutProjection","getProjectionFunctionality","combined","useVisualElement","ProjectionNodeConstructor","lazyContext","visualElementRef","renderer","initialLayoutGroupConfig","createProjectionNode","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","data_id","wantsHandoff","MotionHasOptimisedAnimation","use_isomorphic_effect","jsxs","Provider","Proxy","componentCache","_target","create_config_createDomMotionConfig","forwardMotionProps","createUseRender","visualProps","useVisualProps","_isStatic","rawStyles","htmlProps","useStyle","useInitialMotionValues","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","filteredProps","filterProps","isDom","elementProps","renderedChildren","createElement","create_visual_element","camelToDash","checkStringStartsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","lowercaseSVGElements","isSVGComponent","positionalKeys","isNumOrPxType","_value_types_numbers_index_mjs__WEBPACK_IMPORTED_MODULE_0__","Rx","_value_types_numbers_units_mjs__WEBPACK_IMPORTED_MODULE_1__","getPosFromMatrix","matrix","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","_html_utils_transform_mjs__WEBPACK_IMPORTED_MODULE_2__","removeNonTranslationalTransform","positionalValues","paddingLeft","paddingRight","paddingTop","paddingBottom","translateX","translateY","getAnimatableNone","defaultValueType","_defaults_mjs__WEBPACK_IMPORTED_MODULE_0__","_value_types_complex_filter_mjs__WEBPACK_IMPORTED_MODULE_1__","_value_types_complex_index_mjs__WEBPACK_IMPORTED_MODULE_2__","defaultValueTypes","_number_mjs__WEBPACK_IMPORTED_MODULE_0__","_value_types_color_index_mjs__WEBPACK_IMPORTED_MODULE_1__","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","_value_types_complex_filter_mjs__WEBPACK_IMPORTED_MODULE_2__","WebkitFilter","getDefaultValueType","dimensionValueTypes","numbers","RW","vw","vh","findDimensionValueType","type_int_int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","bA","scaleZ","skew","translateZ","perspective","Fq","$C","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","testValueType","getValueAsType","translateAlias","numTransforms","utils_transform","buildHTMLStyles","hasTransformOrigin","valueAsType","buildTransform","transformString","transformIsDefault","valueIsDefault","transformName","renderHTML","setProperty","newValues","_value_utils_is_motion_value_mjs__WEBPACK_IMPORTED_MODULE_0__","_motion_utils_is_forced_motion_value_mjs__WEBPACK_IMPORTED_MODULE_1__","transformPropOrder","transformProps","dashKeys","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","calcSVGTransformOrigin","pxOriginX","pxOriginY","buildSVGPath","spacing","useDashCase","camelCaseAttributes","tag","renderSVG","_styleProp","_html_utils_render_mjs__WEBPACK_IMPORTED_MODULE_0__","setAttribute","_dom_utils_camel_to_dash_mjs__WEBPACK_IMPORTED_MODULE_2__","_html_utils_scrape_motion_values_mjs__WEBPACK_IMPORTED_MODULE_0__","_value_utils_is_motion_value_mjs__WEBPACK_IMPORTED_MODULE_1__","charAt","toResolve","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","elementsToMeasure","transformsToRestore","_dom_utils_unit_conversion_mjs__WEBPACK_IMPORTED_MODULE_0__","Ei","restore","scrollTo","readAllKeyframes","flushKeyframeResolvers","isAsync","isComplete","_frameloop_frame_mjs__WEBPACK_IMPORTED_MODULE_1__","currentValue","valueAsRead","setFinalKeyframe","renderEndStyles","_animation_utils_is_animation_controls_mjs__WEBPACK_IMPORTED_MODULE_0__","_variant_props_mjs__WEBPACK_IMPORTED_MODULE_1__","_is_variant_label_mjs__WEBPACK_IMPORTED_MODULE_2__","isVariantLabel","getValueState","resolveVariantFromProps","variantPriorityOrder","variantProps","MotionGlobalConfig","addUniqueItem","removeItem","warning","_noop_mjs__WEBPACK_IMPORTED_MODULE_0__","invariant","isBrowser","isNumericalString","isZeroValueString","any","combineFunctions","transformers","toFromDifference","isCustomValue","resolveFinalValueInKeyframes","_animation_utils_is_keyframes_target_mjs__WEBPACK_IMPORTED_MODULE_0__","SubscriptionManager","subscriptions","_array_mjs__WEBPACK_IMPORTED_MODULE_0__","numSubscriptions","getSize","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","useConstant","init","useIsomorphicLayoutEffect","_is_browser_mjs__WEBPACK_IMPORTED_MODULE_1__","useLayoutEffect","velocityPerSecond","frameDuration","isFloat","collectMotionValues","MotionValue","version","canTrackVelocity","updateAndNotify","_frameloop_sync_time_mjs__WEBPACK_IMPORTED_MODULE_0__","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","prevFrameValue","prevUpdatedAt","onChange","subscription","_utils_subscription_manager_mjs__WEBPACK_IMPORTED_MODULE_1__","_frameloop_frame_mjs__WEBPACK_IMPORTED_MODULE_2__","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","_utils_velocity_per_second_mjs__WEBPACK_IMPORTED_MODULE_3__","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","_utils_mjs__WEBPACK_IMPORTED_MODULE_0__","_rgba_mjs__WEBPACK_IMPORTED_MODULE_1__","alpha$1","_numbers_units_mjs__WEBPACK_IMPORTED_MODULE_1__","_utils_mjs__WEBPACK_IMPORTED_MODULE_2__","Nw","_numbers_index_mjs__WEBPACK_IMPORTED_MODULE_3__","_rgba_mjs__WEBPACK_IMPORTED_MODULE_0__","_hex_mjs__WEBPACK_IMPORTED_MODULE_1__","_hsla_mjs__WEBPACK_IMPORTED_MODULE_2__","_utils_mjs__WEBPACK_IMPORTED_MODULE_3__","HD","clampRgbUnit","_utils_clamp_mjs__WEBPACK_IMPORTED_MODULE_0__","rgbUnit","_numbers_index_mjs__WEBPACK_IMPORTED_MODULE_1__","isColorString","testProp","mj","Rw","splitColor","aName","bName","cName","KP","maxDefaults","applyDefaultFilter","unit","functionRegex","_index_mjs__WEBPACK_IMPORTED_MODULE_1__","functions","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","tokenised","_color_index_mjs__WEBPACK_IMPORTED_MODULE_1__","parsedValue","parseComplexValue","numSections","convertNumbersToZero","dA","parsed","transformer","createUnitType","degrees","progressPercentage","sanitize","floatRegex","colorRegex","singleColorRegex","isString","isNullish","WillChangeMotionValue","Hg","counts","styleName","prevCount","hasRemoved","newCount","addValueToWillChange","getWillChangeName","_animation_animators_utils_accelerated_values_mjs__WEBPACK_IMPORTED_MODULE_1__","_render_dom_utils_camel_to_dash_mjs__WEBPACK_IMPORTED_MODULE_2__","isMotionValue","ViewTransitionsContext","ViewTransitions","finishViewTransition","setFinishViewTransition","useBrowserNativeTransitions","usePathname","currentPathname","currentViewTransition","setCurrentViewTransition","onPopState","pendingViewTransitionResolve","pendingViewTransition","startViewTransition","use","transitionRef","_extends$1","apply","_object_without_properties_loose","excluded","sourceKeys","useTransitionRouter","useRouter","triggerTransition","onTransitionReady","ready","_param","_extends","Link","shouldPreserveDefault","isAnchorNodeName","NextLink"],"sourceRoot":""}